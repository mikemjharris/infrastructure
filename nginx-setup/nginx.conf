user root;
worker_processes 4;
#pid /run/nginx.pid;

events {
    worker_connections 768;
# multi_accept on;
}

http {

##
# Basic Settings
##

    sendfile on;
#tcp_nopush on;
#tcp_nodelay on;
    keepalive_timeout 65;
#types_hash_max_size 2048;
# server_tokens off;

# server_names_hash_bucket_size 64;
# server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

# Cache for static files
    proxy_cache_path /tmp/nginx-cache levels=1:2 keys_zone=staticcache:8m max_size=100m inactive=60m use_temp_path=off;
# keyzone size 8MB, cache size 100MB, inactive delete 60min
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_valid 200 302 60m; # cache successful responses for 60 minutes
        proxy_cache_valid 404 1m; # expire 404 responses 1 minute

##
# Logging Settings
##

#access_log /var/log/nginx/access.log;
#error_log /var/log/nginx/error.log;

        server {
            listen  80;
            server_name www.mikesirrah.co.uk www.mikemjharris.com www.sirrahmj.co.uk;
            root  /root/personal-website/;
            index index.html;


            listen 443 ssl http2; # managed by Certbot
                ssl_certificate /etc/letsencrypt/live/blog.mikemjharris.com/fullchain.pem; # managed by Certbot
                ssl_certificate_key /etc/letsencrypt/live/blog.mikemjharris.com/privkey.pem; # managed by Certbot
                include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


                if ($scheme != "https") {
                    return 301 https://$host$request_uri;
                } # managed by Certbot

                location  = /version.json {
                    add_header Access-Control-Allow-Origin *;
                }

        }

    server {
        listen  80;
        server_name ssquaredconsulting.mikemjharris.com; 
        root  /root/wordpress;
        index index.php;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        location / {
            index index.php index.html index.htm;
            try_files $uri $uri/ /index.php?$args;
        }
# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
#    # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
#
#    # With php5-cgi alone:
#    fastcgi_pass 127.0.0.1:9000;
#    # With php5-fpm:
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
        }
    }


    server {
        listen  80;
        server_name trents.mikemjharris.com; 
        root  /root/trents/trents/;
        index index.php;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
#   # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
#
#   # With php5-cgi alone:
#   fastcgi_pass 127.0.0.1:9000;
#   # With php5-fpm:
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
        }
    }
    server {
        listen  80;
        server_name  webhook.mikemjharris.com;
        root  /root/nginx-static/;
        index index2.html;
        location / {
            proxy_pass http://localhost:8081;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

        }
    } 

    server {
        listen  80;
        server_name blog.mikemjharris.com;
        root  /root/nginx-static/;
        index index2.html;
        location  = /version.json {
            add_header Access-Control-Allow-Origin *;
            proxy_pass http://localhost:7000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }

        location / {
            proxy_pass http://localhost:7000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

        }


        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|bmp|js|html|htm)$ {
            proxy_cache staticcache; # Use "staticcache" we defined above
                proxy_cache_bypass $http_cache_control; # Support client "Cache-Control: no-cache" directive
                add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss
                proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

# Nginx cache to ignore Node.js default "Cache-Control: public, max-age=0"
# and don't pass it on to clients
            proxy_ignore_headers Cache-Control;
            proxy_hide_header Cache-Control;
            expires 10s; # "Cache-Control: max-age=3600" tells client to cache for 60 - this should be longer but we need to update app a bit more  

                proxy_pass http://localhost:7000;
        }       

        listen 443 ssl http2; # managed by Certbot
            ssl_certificate /etc/letsencrypt/live/blog.mikemjharris.com/fullchain.pem; # managed by Certbot
            ssl_certificate_key /etc/letsencrypt/live/blog.mikemjharris.com/privkey.pem; # managed by Certbot
            include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot


            if ($scheme != "https") {
                return 301 https://$host$request_uri;
            } # managed by Certbot

    } 
	server {
	  listen  80;
	  server_name view-from-the-ra.mikemjharris.com;
	  root  /root/nginx-static/;
	  index index2.html;
          location / {
		proxy_pass http://localhost:8001;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;		
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
	  
            }
        
        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|bmp|js|html|htm)$ {
            proxy_cache staticcache; # Use "staticcache" we defined above
                proxy_cache_bypass $http_cache_control; # Support client "Cache-Control: no-cache" directive
                add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss
                proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

# Nginx cache to ignore Node.js default "Cache-Control: public, max-age=0"
# and don't pass it on to clients
            proxy_ignore_headers Cache-Control;
            proxy_hide_header Cache-Control;
            expires 10s; # "Cache-Control: max-age=3600" tells client to cache for 60 - this should be longer but we need to update app a bit more  

                proxy_pass http://localhost:8001;
        }       


    
    listen 443 ssl; # managed by Certbot
ssl_certificate /etc/letsencrypt/live/view-from-the-ra.mikemjharris.com/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/view-from-the-ra.mikemjharris.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

} 
	server {
	  server_name books.mikemjharris.com;
	  root  /root/nginx-static/;
	  index index2.html;
          location / {
		proxy_pass http://localhost:8008;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;		
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
	  
            }
        
        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|bmp|js|html|htm)$ {
            proxy_cache staticcache; # Use "staticcache" we defined above
                proxy_cache_bypass $http_cache_control; # Support client "Cache-Control: no-cache" directive
                add_header X-Proxy-Cache $upstream_cache_status; # Hit or Miss
                proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

# Nginx cache to ignore Node.js default "Cache-Control: public, max-age=0"
# and don't pass it on to clients
            proxy_ignore_headers Cache-Control;
            proxy_hide_header Cache-Control;
            expires 10s; # "Cache-Control: max-age=3600" tells client to cache for 60 - this should be longer but we need to update app a bit more  

                proxy_pass http://localhost:8008;
        }       


    

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/books.mikemjharris.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/books.mikemjharris.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

} 


    server {
        listen  80;
        server_name b-reel.mikesirrah.co.uk b-reel.mikemjharris.com;
        root  /root/nginx-static/;
        index index2.html;
        location / {
            proxy_pass http://localhost:7001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

        }
    }
    server {
        listen  80;
        server_name star-wars-timeline.mikesirrah.co.uk star-wars-timeline.mikemjharris.com;
        root  /root/nginx-static/;
        index index.html;
        location / {
            proxy_pass http://localhost:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }	
    }
    server {
        listen  80;
        server_name multi-snowman.mikesirrah.co.uk multi-snowman.mikemjharris.com;
        root  /root/nginx-static/;
        index index.html;
        location / {
            proxy_pass http://localhost:4000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }	
    }
    server {
        listen  80;
        server_name snowman.mikesirrah.co.uk snowman.mikemjharris.com;
        root  /root/nginx-static/;
        index index2.html;
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }	
    }
    server {
        listen  80;
        server_name animated-message.mikesirrah.co.uk animated-message.mikemjharris.com;
        root  /root/nginx-static/;
        index index.html;
        location / {
            proxy_pass http://localhost:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;		
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
        }	
    }
##
# Gzip Settings
##

    gzip on;
    gzip_disable "msie6";

    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

# gzip_vary on;
# gzip_proxied any;
# gzip_comp_level 6;
# gzip_buffers 16 8k;
# gzip_http_version 1.1;
# gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

##
# nginx-naxsi config
##
# Uncomment it if you installed nginx-naxsi
##

# include /etc/nginx/naxsi_core.rules;

##
# Phusion Passenger config
##
# Uncomment it if you installed passenger or passenger-enterprise
##

    passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
    passenger_ruby /usr/bin/ruby;

##
# Virtual Host Configs
##

#include /etc/nginx/conf.d/*.conf;
#include /etc/nginx/sites-enabled/*;
 
	server {
    if ($host = books.mikemjharris.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	  listen  80;
	  server_name books.mikemjharris.com;
    return 404; # managed by Certbot


}}


# mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
# }
